<?php
/**
 * User: Issa Moradnejad
 * Date: 2016/05/11
 */

class iisContactUsTest extends IISTestUtilites
{
    private $TEST_USERNAME = 'adminForLoginTest';
    private $TEST_EMAIL = 'admin@gmail.com';
    private $TEST_CORRECT_PASSWORD = '12345';

    private $CONTACT_DEPT = "Dept2";
    private $CONTACT_EMAIL = "Dept2@gmail.com";
    private $CONTACT_SUBJECT = 'Hello';
    private $CONTACT_MESSAGE = 'it\'s me??';

    private $userService;
    private $user;

    private $questionService;
    private $CURRENT_SESSIONS;
    private $IISCONTACT_Service;

    private function echoText($text, $bounding_box=false)
    {
        if ($bounding_box) {
            echo "-----------------------------ISSA------------------------------------\n";
            echo "$text\n";
            echo "---------------------------------------------------------------------\n";
        }else
            echo "==========ISSA:==>$text\n";
    }

    protected function setUp()
    {
        $this->setBrowser('firefox');
        $this->setBrowserUrl(OW_URL_HOME);
        $this->userService = BOL_UserService::getInstance();
        $accountType = BOL_QuestionService::getInstance()->getDefaultAccountType()->name;
        IISSecurityProvider::createUser($this->TEST_USERNAME,$this->TEST_EMAIL,$this->TEST_CORRECT_PASSWORD,"1987/3/21","1",$accountType);
        $this->user = BOL_UserService::getInstance()->findByUsername($this->TEST_USERNAME);

        $plugins = BOL_PluginService::getInstance()->getAvailablePluginsList();
        if (!empty($plugins['iiscontactus']))
        {
            $plugin = BOL_PluginService::getInstance()->install('iiscontactus');
            OW::getPluginManager()->initPlugin(OW::getPluginManager()->getPlugin($plugin->getKey()));
            $this->echoText('install');
        }
        $this->IISCONTACT_Service = IISCONTACTUS_BOL_Service::getInstance();

        if(! IISCONTACTUS_BOL_DepartmentDao::getInstance()->findIsExistLabel($this->CONTACT_DEPT))
            $this->IISCONTACT_Service->addDepartment($this->CONTACT_EMAIL,$this->CONTACT_DEPT);
    }

    public function setUpPage()
    {
        parent::setUpPage(); // TODO: Change the autogenerated stub
        $this->timeouts()->implicitWait(15000);
    }
    public function testUserSend()
    {

        if(true) {
            $test_caption = "iisContactUsTest-testUserSend";
            //$this->echoText($test_caption);
			
            $this->CURRENT_SESSIONS = $this->prepareSession();
            $this->CURRENT_SESSIONS->currentWindow()->maximize();
			$this->sign_in($this->TEST_USERNAME, $this->TEST_CORRECT_PASSWORD, true);
			sleep(1);
            $this->url(OW_URL_HOME . "iiscontact");

            try {
				$this->byName('to')->value("dept2");
				$this->byName('subject')->value($this->CONTACT_SUBJECT);
				$this->byName('message')->value($this->CONTACT_MESSAGE);

				//------------------CAPTCHA, SESSIONS-----------
				$sessionId = $this->CURRENT_SESSIONS->cookie()->get(OW_Session::getInstance()->getName());
				$sessionId = str_replace('%2C', ',', $sessionId); // took 2 hours to detect  '/^[-,a-zA-Z0-9]{1,128}$/'

				session_id($sessionId);
				session_start();
				$captchaText = ($_SESSION['securimage_code_value']);
				//print_r($_SESSION);
				//$this->echoText('captcha:' . $captchaText);
				$this->byName('captcha')->value($captchaText);
				session_write_close();
				//---------------------------------------------------/

				$this->byName('send')->submit();

                $sendExample = new OW_Example();
				$sendExample->andFieldEqual("label", $this->CONTACT_DEPT);
				$sendExample->andFieldEqual("subject", $this->CONTACT_SUBJECT);
				$sendExample->andFieldEqual("message", $this->CONTACT_MESSAGE);

				$res = IISCONTACTUS_BOL_UserInformationDao::getInstance()->findIdByExample($sendExample);

				if (count($res) == 0)
					$this->assertTrue(false);
				$this->assertTrue(true);
            } catch (Exception $ex) {
                $this->echoText($ex, true);
                if (getenv("SNAPSHOT_DIR"))
                    file_put_contents(getenv("SNAPSHOT_DIR") . $test_caption . '.png', $this->currentScreenshot());
                $this->assertTrue(false);
            }
		}
    }

    public function testGuestCaptcha()
    {
        if(true) {
            $test_caption = "iisContactUsTest-testGuestCaptcha";
            //$this->echoText($test_caption);
            $this->CURRENT_SESSIONS = $this->prepareSession();
            $this->CURRENT_SESSIONS->currentWindow()->maximize();
            $this->url(OW_URL_HOME . "iiscontact");

            try {
                $this->byName('captcha');
                $this->assertTrue(true);
            } catch (Exception $ex) {
                $this->echoText($ex, true);
                if (getenv("SNAPSHOT_DIR"))
                    file_put_contents(getenv("SNAPSHOT_DIR") . $test_caption . '.png', $this->currentScreenshot());
                $this->assertTrue(false);
            }
        }
    }

    public function tearDown()
    {
        $questionDao = BOL_QuestionService::getInstance();
        $questionDao->deleteQuestionDataByUserId($this->user->getId());
        $userDao = BOL_UserDao::getInstance();
        $userDao->deleteById($this->user->getId());

        IISCONTACTUS_BOL_Service::getInstance()->deleteUserInformationBylabel($this->CONTACT_DEPT);

    }
}