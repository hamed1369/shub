<?php
/**
 * User: Issa Moradnejad
 * Date: 2016/06/01
 */

class videoUploadTest extends IISTestUtilites
{
    private $TEST_USER1_NAME = "user1";
    private $TEST_PASSWORD = '12345';

    private $APARAT_CODE = 'http://www.aparat.com/v/p3jDH';
    private $APARAT_TITLE = 'title';
    private $APARAT_DESC = "salam\nin videoye khoobie!\n\nnegash konid";

    private $userService;
    private $user1;

    private $questionService;

    private function echoText($text, $bounding_box=false)
    {
        if ($bounding_box) {
            echo "-----------------------------ISSA------------------------------------\n";
            echo "$text\n";
            echo "---------------------------------------------------------------------\n";
        }else
            echo "==========ISSA:==>$text\n";
    }


    protected function setUp()
    {
        $this->setBrowser('firefox');
        $this->setBrowserUrl(OW_URL_HOME);
        $this->userService = BOL_UserService::getInstance();

        $accountType = BOL_QuestionService::getInstance()->getDefaultAccountType()->name;
        IISSecurityProvider::createUser($this->TEST_USER1_NAME,"user1@gmail.com",$this->TEST_PASSWORD,"1987/3/21","1",$accountType);
        $this->user1 = BOL_UserService::getInstance()->findByUsername($this->TEST_USER1_NAME);

    }

    public function setUpPage()
    {
        parent::setUpPage(); // TODO: Change the autogenerated stub
        $this->timeouts()->implicitWait(15000);
    }

    public function testPostAparat()
    {
        if(true) {
            $test_caption = "videoUploadTest-testPostAparat";
            //$this->echoText($test_caption);
            $CURRENT_SESSIONS = $this->prepareSession();
            $CURRENT_SESSIONS->currentWindow()->maximize();

            //----------LOGIN
            $this->url(OW_URL_HOME . "dashboard");
            $sessionId = $CURRENT_SESSIONS->cookie()->get(OW_Session::getInstance()->getName());
            $sessionId = str_replace('%2C', ',', $sessionId); // took 2 hours to detect  '/^[-,a-zA-Z0-9]{1,128}$/'
            $this->sign_in($this->user1->getUsername(),$this->TEST_PASSWORD,true,true,$sessionId);
            try {
                $this->url('video');

                //BEFORE CHECK
                $vid1 = '0';
                try {
                    $res = $this->checkIfXPathExists('//*[contains(@class,"floatbox_body")]/a');
                    if($res) {
                        $item1 = $this->byClassName('ow_video_list_item');
                        $vid1 = $item1->byXPath('./a')->attribute('href');
                    }
                } catch (Exception $ex) {}


                //POST VIDEO
                $this->byId('btn-add-new-video')->click();
                $this->byName('code')->value($this->APARAT_CODE);
                $this->byName('title')->value($this->APARAT_TITLE);
                //$this->byClassName('htmlarea_styles')->value($this->APARAT_DESC);

                $statusPrivacy = $this->byName('statusPrivacy');
                $statusPrivacy->byXPath('option[@value="everybody"]')->click();//only_for_me, everybody, friends_only

                try {
                    $this->byName('add')->click();
                }catch (Exception $ex) {
                    $this->echoText('problem with curl aparat. not considered an error!');
                    //$this->echoText($ex, true);
                    if (getenv("SNAPSHOT_DIR"))
                        file_put_contents(getenv("SNAPSHOT_DIR") . $test_caption . '.png', $this->currentScreenshot());
                    return;// problem with curl
                }
                $this->url('video');


                //AFTER CHECK
                try {
                    $item1 = $this->byClassName('ow_video_list_item');
                    $vid2 = $item1->byXPath('./a')->attribute('href');
                } catch (Exception $ex) {
                    $vid2 = '0';
                }
                $this->assertNotSame($vid1, $vid2);
                $id2 = substr($vid2,strrpos($vid2,"/")+1);
                //echo 'vid2='.$vid2.',id='.$id2;
                VIDEO_BOL_ClipService::getInstance()->deleteClip($id2);
            } catch (Exception $ex) {
                $this->echoText($ex, true);
                if (getenv("SNAPSHOT_DIR"))
                    file_put_contents(getenv("SNAPSHOT_DIR") . $test_caption . '.png', $this->currentScreenshot());
                $this->assertTrue(false);
            }
        }
    }


    public function tearDown()
    {
        $questionDao = BOL_QuestionService::getInstance();
        $userDao = BOL_UserDao::getInstance();

        $questionDao->deleteQuestionDataByUserId($this->user1->getId());
        $userDao->deleteById($this->user1->getId());
    }
}