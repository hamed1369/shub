<?php
/**
 * User: Issa Moradnejad
 * Date: 2016/05/31
 */

class postPictureTest extends IISTestUtilites
{
    private $TEST_USER1_NAME = "user1";
    private $TEST_PASSWORD = '12345';

    private $userService;
    private $user1;

    private $questionService;

    private function echoText($text, $bounding_box=false)
    {
        if ($bounding_box) {
            echo "-----------------------------ISSA------------------------------------\n";
            echo "$text\n";
            echo "---------------------------------------------------------------------\n";
        }else
            echo "==========ISSA:==>$text\n";
    }


    protected function setUp()
    {
        $this->setBrowser('firefox');
        $this->setBrowserUrl(OW_URL_HOME);
        $this->userService = BOL_UserService::getInstance();
        $accountType = BOL_QuestionService::getInstance()->getDefaultAccountType()->name;
        IISSecurityProvider::createUser($this->TEST_USER1_NAME,"user1@gmail.com",$this->TEST_PASSWORD,"1987/3/21","1",$accountType);
        $this->user1 = BOL_UserService::getInstance()->findByUsername($this->TEST_USER1_NAME);

    }

    public function setUpPage()
    {
        parent::setUpPage(); // TODO: Change the autogenerated stub
        $this->timeouts()->implicitWait(15000);
    }

    public function testPostPicture()
    {
        if(true){
            $test_caption = "postPictureTest-testPostPicture";
            //$this->echoText($test_caption);
            $CURRENT_SESSIONS = $this->prepareSession();
            $CURRENT_SESSIONS->currentWindow()->maximize();

            //----------LOGIN
            $this->url(OW_URL_HOME . "dashboard");
            $sessionId = $CURRENT_SESSIONS->cookie()->get(OW_Session::getInstance()->getName());
            $sessionId = str_replace('%2C', ',', $sessionId); // took 2 hours to detect  '/^[-,a-zA-Z0-9]{1,128}$/'
            $this->sign_in($this->user1->getUsername(),$this->TEST_PASSWORD,true,true,$sessionId);
            try {
                //BEFORE CHECK
                $this->url('photo');
                $this->url('photo/viewlist');
                $this->url('photo/viewlist/latest');
                sleep(1);

                $item1 = $this->byXPath('//*[@class="ow_photo_item"][1]/..');
                $img1 = $item1->attribute('id');
            }catch (Exception $ex) {
                $this->echoText($ex,true);
                if (getenv("SNAPSHOT_DIR"))
                    file_put_contents(getenv("SNAPSHOT_DIR") . $test_caption . '.png', $this->currentScreenshot());
                $this->assertTrue(false);
                return;
            }
            try {
                //POST IMAGE
                $this->url('dashboard');
                $this->byName('status')->click();
                $this->byName('status')->value($test_caption);

                $newsFeedForm = $this->byName('newsfeed_update_status');
                $attachment = $newsFeedForm->byClassName('mlt_file_input');
                $file_path = getcwd().DS. $test_caption . '.png'; //"D:\\programmer.jpg"
                //$this->echoText($file_path);
                file_put_contents($file_path, $this->currentScreenshot());
                $attachment->value($file_path);
                $this->waitUntilElementLoaded("byXPath",'//input[@name="attachment" and @value != ""]');

                $statusPrivacy = $this->byName('statusPrivacy');
                $statusPrivacy->byXPath('option[@value="everybody"]')->click();//only_for_me, everybody, friends_only

                $this->byXPath('//input[@name="save"]')->click();
                unlink($file_path);
            }catch (Exception $ex) {
                $this->echoText($ex,true);
                if (getenv("SNAPSHOT_DIR"))
                    file_put_contents(getenv("SNAPSHOT_DIR") . $test_caption . '.png', $this->currentScreenshot());
                $this->assertTrue(false);
                return;
            }

            try {
                //AFTER CHECK
                $this->url('photo');
                $this->url('photo/viewlist');
                $this->url('photo/viewlist/latest');
                sleep(1);

                $item1 = $this->byXPath('//*[@class="ow_photo_item"][1]/..');
                $img2 = $item1->attribute('id');

                if($img1==$img2)
                    $this->assertTrue(false);

                //$this->url('sign-out');
            }catch (Exception $ex) {
                $this->echoText($ex,true);
                if (getenv("SNAPSHOT_DIR"))
                    file_put_contents(getenv("SNAPSHOT_DIR") . $test_caption . '.png', $this->currentScreenshot());
                $this->assertTrue(false);
            }
        }
    }


    public function tearDown()
    {
        $questionDao = BOL_QuestionService::getInstance();
        $userDao = BOL_UserDao::getInstance();

        $questionDao->deleteQuestionDataByUserId($this->user1->getId());
        $userDao->deleteById($this->user1->getId());
    }
}